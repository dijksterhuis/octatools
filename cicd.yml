# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright Â© 2024 Mike Robeson [dijksterhuis]

image: "rust:latest"

stages:
  - test
  - build

test_cobertura:
  stage: test
  tags:
    - saas-linux-medium-amd64
  before_script:
    - apt install -yqq libssl-dev
    - cargo install cargo-tarpaulin
  script:
    - cargo tarpaulin -o xml
  coverage: '/^\d+.\d+% coverage/'
  artifacts:
    when: always
    paths:
      - cobertura.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  rules:
    - when: never
    # only run on branches when an MRs is open
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - resources/**
          - serde_octatrack/**
          - src/**
          - cicd.yml
        compare_to: main
    - if: $CI_COMMIT_TAG == null
    # run on main branch for now until i get to the point where MRs are a thing.
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

test_junit:
  stage: test
  image: rustlang/rust:nightly
  tags:
    - saas-linux-medium-amd64
  script:
    - "cargo +nightly install junitify"
    - "cargo +nightly test -- --format=json -Z unstable-options --report-time | junitify --out test-results"
  artifacts:
    when: always
    reports:
      junit: test-results/*.xml
  rules:
    - when: never
    # only run on branches when an MRs is open
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - resources/**
          - serde_octatrack/**
          - src/**
          - cicd.yml
        compare_to: main
    - if: $CI_COMMIT_TAG == null
    # run on main branch for now until i get to the point where MRs are a thing.
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.build:
  stage: build
  tags:
    - saas-linux-small-amd64
  variables:
    TARGET: x86_64-unknown-linux-gnu
  before_script:
    - |
      apt-get update -yqq
      apt-get -yqq install --no-install-recommends podman
      cargo install cross
  script:
    - cross build --release --target $TARGET
  after_script:
    - find ./target -type f -name "*octatools*" -exec cp {} ./octatools.$TARGET \;
  artifacts:
    paths:
      - ./octatools.$TARGET
  rules:
    - when: never
    # only run on branches when an MRs is open
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - resources/**
          - serde_octatrack/**
          - src/**
          - cicd.yml
        compare_to: main
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build-x86-linux-gnu:
  extends: .build

build-arm-linux-gnu:
  extends: .build
  variables:
    TARGET: aarch64-unknown-linux-gnu

#build-x86-windows-gnu:
#  extends: .build
#  tags:
#    - saas-linux-medium-amd64
#  variables:
#    TARGET: x86_64-pc-windows-gnu
