# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright Â© 2024 Mike Robeson [dijksterhuis]

# Control when a pipeline is *ever* able to run. One of
# - a merge request pipeline (API setting changed so these always run in forks)
# - a push to the default branch
# - a newly pushed tag
# based on: https://stackoverflow.com/a/74574075
workflow:
  rules:
    # Explicitly enable merge request pipelines to be created (not done by
    # default)
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # Prevent duplicate pipelines from push events to branches that are the
    # source branch of one or more open merge requests. If
    # $CI_OPEN_MERGE_REQUESTS is non-empty on a branch pipeline, it means that
    # the above rule has already caused (or will cause) a merge request pipeline
    # to run. These rules are separately evaluated for the merge request event
    # resulting from the same push.
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    # no feature branch pipelines, only branch we can run on is the default
    # branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

include:
  # always run dependency scans on default branch, new tags or merge requests
  - component: $CI_SERVER_FQDN/components/dependency-scanning/cargo@0.6.0
    inputs:
      stage: check
    rules:
      - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      - if: $CI_COMMIT_BRANCH
      - if: $CI_COMMIT_TAG
  # always run coverage on default branch, new tags or merge requests
  - local: ".gitlab/cicd/coverage.yml"
    rules:
      - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      - if: $CI_COMMIT_BRANCH
      - if: $CI_COMMIT_TAG
  # run smoke test checks for bin/lib-py only on merge requests
  - local: ".gitlab/cicd/smoke-tests.yml"
    rules:
      - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  # only run linting checks in a merge request
  - local: ".gitlab/cicd/lints.yml"
    rules:
      - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
  # publish to crates.io and docker registry build 'n' push on a new tag push
  # NOTE: Currently only does a dry-run publish to crates.io
  - local: ".gitlab/cicd/release.yml"
    rules:
      - if: $CI_COMMIT_TAG

stages:
  - build
  - test
  - check
  - release
