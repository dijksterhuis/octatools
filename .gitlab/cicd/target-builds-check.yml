# parallel matrix for most popular targets
# - RUST_TARGET -- actual cargo/rust target id
# - CI_RUNNER_TAG: the CI machine type to execute the release build step on
# - CI_IMAGE: the CI image to run the release build step inside, macOS have
#   special images: https://docs.gitlab.com/ci/runners/hosted_runners/macos/#supported-macos-images
#   with a limited set of tools installed: https://gitlab-org.gitlab.io/ci-cd/shared-runners/images/macos-image-inventory/macos-14-xcode-15/
.parallel_targets: &para
  parallel:
    matrix:
      # ==========================================
      # intel linux CLI
      - RUST_TARGET: x86_64-unknown-linux-gnu
        CI_RUNNER_TAG: saas-linux-small-amd64
        CI_IMAGE: "rust:latest"
      # ==========================================
      # ARM linux CLI
      - RUST_TARGET: aarch64-unknown-linux-gnu
        CI_RUNNER_TAG: saas-linux-small-arm64
        CI_IMAGE: "rust:latest"
      # ==========================================
      # Intel windows CLI (works for powershell/MYSYS2/CMD)
      - RUST_TARGET: x86_64-pc-windows-gnu
        CI_RUNNER_TAG: saas-linux-small-amd64
        CI_IMAGE: "rust:latest"
      # ==========================================
      # TODO: ARM windows CLI
      # - RUST_TARGET: aarch64-pc-windows-gnullvm
      #   CI_RUNNER_TAG: saas-linux-small-arm64
      #   CI_IMAGE: "rust:latest"
      # Disabled due to being unavailable for some reason? capacity issues tuesday afternoon?
      #  # ==========================================
      #  # Intel macOS CLI
      #  - RUST_TARGET: x86_64-apple-darwin
      #    CI_RUNNER_TAG: saas-macos-medium-m1
      #    CI_IMAGE: "macos-14-xcode-15"
      #  # ==========================================
      #  # ARM macOS CLI
      #  - RUST_TARGET: aarch64-apple-darwin
      #    CI_RUNNER_TAG: saas-macos-medium-m1
      #    CI_IMAGE: "macos-14-xcode-15"

# build the i/o package and CLI binary for targets to check for any
# cross-platform build issues.
smoke-builds:
  stage: "test"
  image: "${CI_IMAGE}"
  before_script:
    - |
      if [[ "${RUST_TARGET}" == "aarch64-apple-darwin" ]] || [[ "${RUST_TARGET}" == "x86_64-apple-darwin" ]]
      then
        curl https://sh.rustup.rs -sSf -o ./rustup.sh
        chmod +x ./rustup.sh
        ./rustup.sh -y
        rm -f ./rustup.sh
      fi 
      if [[ "${RUST_TARGET}" == "aarch64-pc-windows-gnu" ]] || [[ "${RUST_TARGET}" == "x86_64-pc-windows-gnu" ]]
      then
        apt update -yqq
        apt install -yqq gcc-mingw-w64-x86-64
      fi 
      rustup target add "${RUST_TARGET}"
  script:
    - cargo build --package "ot-tools-io" --target "${RUST_TARGET}"
    - cargo build --bin "ot-tools" --target "${RUST_TARGET}"
  tags:
    - $CI_RUNNER_TAG
  <<: *para
