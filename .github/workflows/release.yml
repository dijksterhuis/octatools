# "borrowed" and modified from:
# https://github.com/open-contracting/cardinal-rs/blob/main/.github/workflows/release.yml

name: Release octatools-bin on tag push
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create ${{ github.ref_name }}
  assets:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # 64-bit (x86)
          - build: linux-64-bit
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: macos-64-bit
            os: macos-latest
            target: x86_64-apple-darwin
          #- build: windows-64-bit
          #  os: ubuntu-latest
          #  target: x86_64-pc-windows-gnu
          # 64-bit (ARM)
          - build: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin
          #- build: linux-arm
          #  os: ubuntu-latest
          #  target: aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - run: cargo build --bin octatools-bin --release --target ${{ matrix.target }}
      # 7z is available on all runners.
      # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#preinstalled-software
      - name: Create bin archive
        id: archive-bin
        shell: bash
        run: |
          DIRECTORY="octatools-bin-${{ github.ref_name }}-${{ matrix.build }}"
          if [[ "${{ matrix.target }}" =~ "-pc-windows-" ]]; then
            SUFFIX=".exe"
          else
            SUFFIX=""
          fi
          mkdir "$DIRECTORY"
          cp LICENSE.md README.md "target/${{ matrix.target }}/release/octatools-bin$SUFFIX" "$DIRECTORY"
          7z a "$DIRECTORY.zip" "$DIRECTORY"
          echo "path=$DIRECTORY.zip" >> $GITHUB_OUTPUT
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ steps.archive.outputs.path }}